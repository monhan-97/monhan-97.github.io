"use strict";(self.webpackChunkhuangmh_blog=self.webpackChunkhuangmh_blog||[]).push([[3842],{3881:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var r=t(8101);const s={},o=r.createContext(s);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(o.Provider,{value:n},e.children)}},4525:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>x,default:()=>S,frontMatter:()=>f,metadata:()=>r,toc:()=>y});const r=JSON.parse('{"id":"Redux/createStore","title":"createStrore","description":"createStrore \u7b80\u4ecb","source":"@site/docs/Redux/createStore.mdx","sourceDirName":"Redux","slug":"/Redux/createStore","permalink":"/docs/Redux/createStore","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"\u9ec4\u68a6\u6c49","lastUpdatedAt":1703489658000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Redux \u7b80\u4ecb","permalink":"/docs/Redux/introduce"},"next":{"title":"compose","permalink":"/docs/Redux/compose"}}');var s=t(5105),o=t(3881),c=t(8101);function i(e){return typeof e}const a=()=>Math.random().toString(36).substring(7).split("").join("."),d={INIT:`@@redux/INIT${a()}`,REPLACE:`@@redux/REPLACE${a()}`,PROBE_UNKNOWN_ACTION:()=>`@@redux/PROBE_UNKNOWN_ACTION${a()}`};const u={count:0},l=(e,n)=>{switch(n.type){case"Increment":return{count:e.count+=1};case"Decrement":return{count:e.count-=1};case"IncrementIfOdd":if(e.count%2!=0)return l(e,{type:"Increment"});default:return u}},p=function e(n,t,r){if("function"!=typeof n)throw new Error(`Expected the root reducer to be a function. Instead, received: '${i(n)}'`);if("function"==typeof t&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");if(void 0!==r){if("function"!=typeof r)throw new Error(`Expected the enhancer to be a function. Instead, received: '${i(r)}'`);return r(e)(n,t)}let s=n,o=t,c=new Map,a=c,u=0,l=!1;function p(){a===c&&(a=new Map,c.forEach(((e,n)=>{a.set(n,e)})))}function h(e){if(!function(e){if("object"!=typeof e||null===e)return!1;let n=e;for(;null!==Object.getPrototypeOf(n);)n=Object.getPrototypeOf(n);return Object.getPrototypeOf(e)===n}(e))throw new Error(`Actions must be plain objects. Instead, the actual type was: '${i(e)}'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.`);if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');if("string"!=typeof e.type)throw new Error(`Action "type" property must be a string. Instead, the actual type was: '${i(e.type)}'. Value was: '${e.type}' (stringified)`);try{l=!0,o=s(o,e)}finally{l=!1}return(c=a).forEach((e=>{e()})),e}return h({type:d.INIT}),{getState:function(){if(l)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return o},dispatch:h,replaceReducer:function(e){if("function"!=typeof e)throw new Error(`Expected the nextReducer to be a function. Instead, received: '${i(e)}`);s=e,h({type:d.REPLACE})},subscribe:function(e){if("function"!=typeof e)throw new Error(`Expected the listener to be a function. Instead, received: '${i(e)}'`);if(l)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");let n=!0;p();const t=u++;return a.set(t,e),function(){if(n){if(l)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");n=!1,p(),a.delete(t),c=null}}}}}(l,u),h=()=>{const[e,n]=(0,c.useState)(u);return(0,c.useEffect)((()=>{const e=p.subscribe((()=>{n(p.getState())}));return()=>{e()}}),[]),(0,s.jsx)("div",{children:(0,s.jsxs)("p",{children:["\u70b9\u51fb: ",(0,s.jsx)("span",{id:"value",children:e.count})," \u6b21\u6570",(0,s.jsx)("button",{onClick:()=>{p.dispatch({type:"Increment"})},children:"+"}),(0,s.jsx)("button",{onClick:()=>{p.dispatch({type:"Decrement"})},children:"-"}),(0,s.jsx)("button",{onClick:()=>{p.dispatch({type:"IncrementIfOdd"})},children:"Increment if odd"}),(0,s.jsx)("button",{onClick:()=>{setTimeout((()=>{p.dispatch({type:"Increment"})}),300)},children:"Increment async"})]})})},f={},x="createStrore",m={},y=[{value:"createStrore \u7b80\u4ecb",id:"createstrore-\u7b80\u4ecb",level:2},{value:"\u521b\u5efa actions",id:"\u521b\u5efa-actions",level:2},{value:"\u521b\u5efa reducer",id:"\u521b\u5efa-reducer",level:2},{value:"\u548c react \u7ed3\u5408\u4f7f\u7528",id:"\u548c-react-\u7ed3\u5408\u4f7f\u7528",level:2},{value:"createStrore \u6e90\u7801 \u89e3\u6790",id:"createstrore-\u6e90\u7801-\u89e3\u6790",level:2}];function b(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"createstrore",children:"createStrore"})}),"\n",(0,s.jsx)(n.h2,{id:"createstrore-\u7b80\u4ecb",children:"createStrore \u7b80\u4ecb"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u521b\u5efa\u4e00\u4e2a Redux ",(0,s.jsx)(n.code,{children:"store"})," \u6765\u4ee5\u5b58\u653e\u5e94\u7528\u4e2d\u6240\u6709\u7684 state"]}),"\n",(0,s.jsxs)(n.li,{children:["\u5e94\u7528\u4e2d\u4e0d\u8981\u521b\u5efa\u591a\u4e2a ",(0,s.jsx)(n.code,{children:"store"})," \u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"combineReducers"})," \u6765\u628a\u591a\u4e2a reducer \u521b\u5efa\u6210\u4e00\u4e2a\u6839 reduce"]}),"\n",(0,s.jsxs)(n.li,{children:["\u5f53 ",(0,s.jsx)(n.code,{children:"store"})," \u521b\u5efa\u5b8c\u6bd5\u540e Redux \u4f1a ",(0,s.jsx)(n.code,{children:"dispatch"})," \u4e00\u4e2a ",(0,s.jsx)(n.code,{children:"Init"})," \u7684 action \u7528\u4e8e\u83b7\u53d6\u521d\u59cb\u72b6\u6001\u7684 state \u6765\u586b\u5145 store"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u521b\u5efa-actions",children:"\u521b\u5efa actions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./actions.ts'",children:'export type IncrementAction = {\n  type: "Increment";\n};\n\nexport type DecrementAction = {\n  type: "Decrement";\n};\n\nexport type IncrementIfOddAction = {\n  type: "IncrementIfOdd";\n};\n\nexport type IncrementAsync = {\n  type: "IncrementAsync";\n};\n\nexport type Actions =\n  | IncrementAction\n  | DecrementAction\n  | IncrementIfOddAction\n  | IncrementAsync;\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\u521b\u5efa-reducer",children:"\u521b\u5efa reducer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./reducers.ts'",children:'import { Actions } from "./actions";\n\nexport interface StoreState {\n  count: number;\n}\n\nexport const initialState: StoreState = {\n  count: 0,\n};\n\nconst reducer = (state: StoreState, action: Actions) => {\n  switch (action.type) {\n    case "Increment":\n      return {\n        count: (state.count += 1),\n      };\n    case "Decrement":\n      return {\n        count: (state.count -= 1),\n      };\n    case "IncrementIfOdd":\n      if (state.count % 2 !== 0) {\n        return reducer(state, { type: "Increment" });\n      }\n    default:\n      return initialState;\n  }\n};\n\nexport default reducer;\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\u548c-react-\u7ed3\u5408\u4f7f\u7528",children:"\u548c react \u7ed3\u5408\u4f7f\u7528"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='App.tsx'",children:'import React, { useEffect, useState } from "react";\nimport { createStore } from "redux";\nimport { Actions } from "./actions";\nimport reduces, { StoreState, initialState } from "./reducers";\n\nconst store = createStore<StoreState, Actions>(reduces, initialState);\n\nconst App = () => {\n  const [state, setState] = useState<StoreState>(initialState);\n\n  useEffect(() => {\n    const unSubscribe = store.subscribe(() => {\n      setState(store.getState());\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  return (\n    <div>\n      <p>\n        \u70b9\u51fb: <span id="value">{state.count}</span> \u6b21\u6570\n        <button\n          onClick={() => {\n            store.dispatch({\n              type: "Increment",\n            });\n          }}\n        >\n          +\n        </button>\n        <button\n          onClick={() => {\n            store.dispatch({\n              type: "Decrement",\n            });\n          }}\n        >\n          -\n        </button>\n        <button\n          onClick={() => {\n            store.dispatch({\n              type: "IncrementIfOdd",\n            });\n          }}\n        >\n          Increment if odd\n        </button>\n        <button\n          onClick={() => {\n            setTimeout(() => {\n              store.dispatch({\n                type: "Increment",\n              });\n            }, 300);\n          }}\n        >\n          Increment async\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default App;\n'})}),"\n",(0,s.jsx)(h,{}),"\n",(0,s.jsx)(n.h2,{id:"createstrore-\u6e90\u7801-\u89e3\u6790",children:"createStrore \u6e90\u7801 \u89e3\u6790"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"createStrore"})," \u4f1a\u8fd4\u56de\u5982\u4e0b\u51e0\u4e2a\u65b9\u6cd5","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["dispatch","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5206\u53d1 ",(0,s.jsx)(n.code,{children:"action"})," \u5bf9\u8c61 \u901a\u8fc7 ",(0,s.jsx)(n.code,{children:"reducer"})," \u7684\u8fd4\u56de\u7ed3\u679c \u89e6\u53d1 ",(0,s.jsx)(n.code,{children:"store"})," \u66f4\u65b0 \u8fd9\u662f\u66f4\u65b0 store \u7684\u552f\u4e00\u9014\u5f84"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["replaceReducer(nextReducer)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7528\u4e8e\u66ff\u6362 \u5f53\u524d createStore \u521b\u5efa\u7684 reducer"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["subscribe(listener)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u8ba2\u9605 store \u7684\u53d8\u5316"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["getState()","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u8fd4\u56de\u5e94\u7528\u5f53\u524d\u7684 state\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'export function createStore<S, A extends Action, PreloadedState = S>(\n  reducer: Reducer<S, A, PreloadedState>,\n  preloadedState?: PreloadedState | undefined\n  enhancer?:StoreEnhancer\n): Store<S, A> {\n  if (typeof reducer !== "function") {\n    throw new Error(\n      `Expected the root reducer to be a function. Instead, received: \'${kindOf(\n        reducer\n      )}\'`\n    );\n  }\n\n  if (\n    (typeof preloadedState === "function" && typeof enhancer === "function") ||\n    (typeof enhancer === "function" && typeof arguments[3] === "function")\n  ) {\n    throw new Error(\n      "It looks like you are passing several store enhancers to " +\n        "createStore(). This is not supported. Instead, compose them " +\n        "together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example."\n    );\n  }\n\n  if (typeof enhancer !== "undefined") {\n    if (typeof enhancer !== "function") {\n      throw new Error(\n        `Expected the enhancer to be a function. Instead, received: \'${kindOf(\n          enhancer\n        )}\'`\n      );\n    }\n\n    return enhancer(createStore)(\n      reducer,\n      preloadedState as PreloadedState | undefined\n    );\n  }\n\n  /**\n   * \u5f53\u524d\u7684Reducer\n   */\n  let currentReducer = reducer;\n  /**\n   * \u5f53\u524d\u7684State\n   */\n  let currentState: S | PreloadedState | undefined = preloadedState as\n    | PreloadedState\n    | undefined;\n  /**\n   * \u5b58\u50a8\u66f4\u65b0\u51fd\u6570\u7684\u6570\u7ec4\n   */\n  let currentListeners: Map<number, ListenerCallback> = new Map();\n  /**\n   * \u4e0b\u6b21dispatch\u5c06\u4f1a\u89e6\u53d1\u7684\u66f4\u65b0\u51fd\u6570\u6570\u7ec4\n   */\n  let nextListeners = currentListeners;\n  /**\n   * \u76d1\u542c\u7684id\u8ba1\u6570\n   */\n  let listenerIdCounter = 0;\n  /**\n   * Dispatch\u662f\u5426\u6267\u884c\u5b8c\u6210\n   */\n  let isDispatching = false;\n\n  /**\n   * \u8bfb\u53d6\u5f53\u524dstore\u91cc\u9762\u7684\u6570\u636e\n   *\n   * @returns The current state tree of your application.\n   */\n  function getState(): S {\n    if (isDispatching) {\n      throw new Error(\n        "You may not call store.getState() while the reducer is executing. " +\n          "The reducer has already received the state as an argument. " +\n          "Pass it down from the top reducer instead of reading it from the store."\n      );\n    }\n\n    return currentState as S;\n  }\n\n  /**\n   * \u8fd9\u4e2a\u53ef\u4ee5\u9632\u6b62 dispatch\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d \u8c03\u7528subscribe/unsubscribe  \u51fa\u73b0\u7684\u4efb\u4f55bug\n   */\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = new Map();\n      currentListeners.forEach((listener, key) => {\n        nextListeners.set(key, listener);\n      });\n    }\n  }\n  /**\n   * \u5206\u53d1\u4e00\u4e2a action \u8fd9\u662f\u89e6\u53d1\u72b6\u6001\u72b6\u6001\u7684\u552f\u4e00\u65b9\u6cd5\n   * @param action\n   * @returns action\n   */\n  function dispatch(action: A) {\n    if (!isPlainObject(action)) {\n      throw new Error(\n        `Actions must be plain objects. Instead, the actual type was: \'${kindOf(\n          action\n        )}\'. You may need to add middleware to your store setup to handle dispatching other values, such as \'redux-thunk\' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.`\n      );\n    }\n\n    if (typeof action.type === "undefined") {\n      throw new Error(\n        \'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.\'\n      );\n    }\n\n    if (typeof action.type !== "string") {\n      throw new Error(\n        `Action "type" property must be a string. Instead, the actual type was: \'${kindOf(\n          action.type\n        )}\'. Value was: \'${action.type}\' (stringified)`\n      );\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    const listeners = (currentListeners = nextListeners);\n\n    listeners.forEach((listener) => {\n      listener();\n    });\n\n    return action;\n  }\n\n  function replaceReducer(nextReducer: Reducer<S, A>): void {\n    if (typeof nextReducer !== "function") {\n      throw new Error(\n        `Expected the nextReducer to be a function. Instead, received: \'${kindOf(\n          nextReducer\n        )}`\n      );\n    }\n\n    currentReducer = nextReducer as unknown as Reducer<S, A, PreloadedState>;\n\n    dispatch({\n      type: actionTypes.REPLACE,\n    } as A);\n  }\n\n  /**\n   * \u8ba2\u9605\u72b6\u6001\u7684\u53d8\u66f4\n   * @returns unsubscribe\n   */\n  function subscribe(listener: ListenerCallback) {\n    if (typeof listener !== "function") {\n      throw new Error(\n        `Expected the listener to be a function. Instead, received: \'${kindOf(\n          listener\n        )}\'`\n      );\n    }\n\n    if (isDispatching) {\n      throw new Error(\n        "You may not call store.subscribe() while the reducer is executing. " +\n          "If you would like to be notified after the store has been updated, subscribe from a " +\n          "component and invoke store.getState() in the callback to access the latest state. " +\n          "See https://redux.js.org/api/store#subscribelistener for more details."\n      );\n    }\n\n    /**\n     * \u6807\u8bb0\u662f\u5426\u8ba2\u9605\u5b8c\u6210\n     */\n    let isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    const listenerId = listenerIdCounter++;\n    nextListeners.set(listenerId, listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(\n          "You may not unsubscribe from a store listener while the reducer is executing. " +\n            "See https://redux.js.org/api/store#subscribelistener for more details."\n        );\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      nextListeners.delete(listenerId);\n      currentListeners = null;\n    };\n  }\n\n  /**\n   * \u5f53store\u521b\u5efa\u5b8c\u6bd5\u7684\u65f6\u5019 dispatch INIT Action\n   * \u4f7f\u6bcf\u4e2areduce\u8fd4\u56de\u521d\u59cb\u503c \u53ef\u4ee5\u586b\u5145\u521d\u59cb\u72b6\u6001\n   */\n  dispatch({ type: actionTypes.INIT } as A);\n\n  return {\n    getState,\n    dispatch: dispatch as Dispatch<A>,\n    replaceReducer,\n    subscribe,\n  };\n}\n'})})]})}function S(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}}}]);